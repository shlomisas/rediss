{"version":3,"sources":["utils/redisHelper.js"],"names":["RedisHelper","constructor","setGlobalClient","client","_globalClient","getGlobalClient","encodeRedisData","data","String","JSON","stringify","e","decodeRedisData","trim","isNaN","Number","parse","decodeArrayOfRedisData","length","newData","piece","push","isGlobString","str","includes"],"mappings":";;;;;;AAIA;;AAEe,MAAMA,WAAN,CAAiB;;AAI5BC,kBAAa;AACT,cAAM,8BAAN;AACH;;AAED,WAAOC,eAAP,CAAuBC,MAAvB,EAA8B;AAC1BH,oBAAYI,aAAZ,GAA4BD,MAA5B;AACH;;AAED,WAAOE,eAAP,GAAwB;AACpB,eAAOL,YAAYI,aAAnB;AACH;;AAED;;;;;AAKA,WAAOE,eAAP,CAAuBC,IAAvB,EAA4B;;AAExB,YAAG,OAAOA,IAAP,KAAgB,QAAnB,EAA6B,OAAOA,IAAP;AAC7B,YAAG,OAAOA,IAAP,KAAgB,QAAnB,EAA6B,OAAOC,OAAOD,IAAP,CAAP;AAC7B,YAAG,OAAOA,IAAP,KAAgB,SAAnB,EAA8B,OAAOC,OAAOD,IAAP,CAAP;AAC9B,YAAG,OAAOA,IAAP,KAAgB,QAAhB,IAA4BA,SAAS,IAAxC,EAA6C;AACzC,gBAAG;AACC,uBAAOE,KAAKC,SAAL,CAAeH,IAAf,CAAP;AACH,aAFD,CAEC,OAAMI,CAAN,EAAQ;AACL;AACH;AACJ;;AAED,cAAM,kCAA0BJ,IAA1B,CAAN;AACH;;AAED;;;;AAIA,WAAOK,eAAP,CAAuBL,IAAvB,EAA4B;;AAExB,YAAGA,SAAS,IAAZ,EAAkB,OAAOA,IAAP;AAClB,YAAG,OAAOA,IAAP,KAAgB,QAAhB,IAA4BA,KAAKM,IAAL,OAAgB,EAA/C,EAAmD,OAAON,IAAP;;AAEnD,YAAG,CAACO,MAAMP,IAAN,CAAJ,EAAiB,OAAOQ,OAAOR,IAAP,CAAP;AACjB,YAAGA,SAAS,MAAT,IAAmBA,SAAS,OAA/B,EAAwC,OAAOA,SAAS,MAAhB;;AAExC,YAAG;AACC,mBAAOE,KAAKO,KAAL,CAAWT,IAAX,CAAP;AACH,SAFD,CAEC,OAAMI,CAAN,EAAQ;AACL;AACH;;AAED,eAAOJ,IAAP;AAEH;;AAED;;;;;AAKA,WAAOU,sBAAP,CAA8BV,IAA9B,EAAmC;;AAE/B,YAAG,CAACA,IAAD,IAAS,CAACA,KAAKW,MAAlB,EAA0B;;AAE1B,YAAIC,UAAU,EAAd;;AAEA,aAAI,IAAIC,KAAR,IAAiBb,IAAjB,EAAsB;AAClBY,oBAAQE,IAAR,CAAarB,YAAYY,eAAZ,CAA4BQ,KAA5B,CAAb;AACH;;AAED,eAAOD,OAAP;AACH;;AAED,WAAOG,YAAP,CAAoBC,GAApB,EAAwB;AACpB,eAAOA,QAAQA,IAAIC,QAAJ,CAAa,GAAb,KACXD,IAAIC,QAAJ,CAAa,GAAb,CADW,IAEVD,IAAIC,QAAJ,CAAa,GAAb,KAAqBD,IAAIC,QAAJ,CAAa,GAAb,CAFnB,CAAP;AAGH;AAjF2B;kBAAXxB,W,EANrB","file":"redisHelper.js","sourcesContent":["/**\r\n * Created by Shlomi\r\n */\r\n\r\nimport {StaticClassError, RedisInvalidDataError} from '../errors';\r\n\r\nexport default class RedisHelper{\r\n\r\n    static _globalClient;\r\n\r\n    constructor(){\r\n        throw new StaticClassError();\r\n    }\r\n\r\n    static setGlobalClient(client){\r\n        RedisHelper._globalClient = client;\r\n    }\r\n\r\n    static getGlobalClient(){\r\n        return RedisHelper._globalClient;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param data {String|Number|Object|Boolean}\r\n     * @return String\r\n     */\r\n    static encodeRedisData(data){\r\n\r\n        if(typeof data === 'string') return data;\r\n        if(typeof data === 'number') return String(data);\r\n        if(typeof data === 'boolean') return String(data);\r\n        if(typeof data === 'object' && data !== null){\r\n            try{\r\n                return JSON.stringify(data);\r\n            }catch(e){\r\n                // no-op\r\n            }\r\n        }\r\n\r\n        throw new RedisInvalidDataError(data);\r\n    }\r\n\r\n    /**\r\n     * @param data String\r\n     * @return {String|Number|Object|Boolean}\r\n     */\r\n    static decodeRedisData(data){\r\n\r\n        if(data === null) return data;\r\n        if(typeof data === 'string' && data.trim() === \"\") return data;\r\n\r\n        if(!isNaN(data)) return Number(data);\r\n        if(data === 'true' || data === 'false') return data === 'true';\r\n\r\n        try{\r\n            return JSON.parse(data);\r\n        }catch(e){\r\n            // no-op\r\n        }\r\n\r\n        return data;\r\n\r\n    }\r\n\r\n    /**\r\n     * Decode array elements with RedisHelper.decodeRedisData\r\n     * @param data Array\r\n     * @return {Array}\r\n     */\r\n    static decodeArrayOfRedisData(data){\r\n\r\n        if(!data || !data.length) return;\r\n\r\n        let newData = [];\r\n\r\n        for(let piece of data){\r\n            newData.push(RedisHelper.decodeRedisData(piece));\r\n        }\r\n\r\n        return newData;\r\n    }\r\n\r\n    static isGlobString(str){\r\n        return str && (str.includes('*') ||\r\n            str.includes('?') ||\r\n            (str.includes('[') && str.includes(']')))\r\n    }\r\n}\r\n"]}