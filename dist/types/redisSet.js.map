{"version":3,"sources":["types/redisSet.js"],"names":["RedisSet","add","data","_beforeAction","_raw","_key","encodeRedisData","remove","exists","size","getAll","decodeArrayOfRedisData","getRands","count","popRand","decodeRedisData"],"mappings":";;;;;;AAIA;;;;AAEA;;;;;;2cANA;;;;AAQe,MAAMA,QAAN,gCAAmC;;AAExCC,OAAN,CAAUC,IAAV,EAAe;AAAA;;AAAA;AACX,kBAAKC,aAAL;AACA,mBAAO,CAAC,EAAC,MAAM,MAAKC,IAAL,CAAU,MAAV,EAAkB,MAAKC,IAAvB,EAA6B,sBAAYC,eAAZ,CAA4BJ,IAA5B,CAA7B,CAAP,CAAR;AAFW;AAGd;;AAEKK,UAAN,CAAaL,IAAb,EAAkB;AAAA;;AAAA;AACd,mBAAKC,aAAL;AACA,mBAAO,CAAC,EAAC,MAAM,OAAKC,IAAL,CAAU,MAAV,EAAkB,OAAKC,IAAvB,EAA6B,sBAAYC,eAAZ,CAA4BJ,IAA5B,CAA7B,CAAP,CAAR;AAFc;AAGjB;;AAEKM,UAAN,CAAaN,IAAb,EAAkB;AAAA;;AAAA;AACd,mBAAKC,aAAL;AACA,mBAAO,CAAC,EAAC,MAAM,OAAKC,IAAL,CAAU,WAAV,EAAuB,OAAKC,IAA5B,EAAkC,sBAAYC,eAAZ,CAA4BJ,IAA5B,CAAlC,CAAP,CAAR;AAFc;AAGjB;;AAEKO,QAAN,GAAY;AAAA;;AAAA;AACR,mBAAKN,aAAL;AACA,mBAAO,OAAKC,IAAL,CAAU,OAAV,EAAmB,OAAKC,IAAxB,CAAP;AAFQ;AAGX;;AAEKK,UAAN,GAAc;AAAA;;AAAA;AACV,mBAAKP,aAAL;AACA,mBAAO,sBAAYQ,sBAAZ,EAAmC,MAAM,OAAKP,IAAL,CAAU,UAAV,EAAsB,OAAKC,IAA3B,CAAzC,EAAP;AAFU;AAGb;;AAEKO,YAAN,CAAeC,QAAQ,CAAvB,EAAyB;AAAA;;AAAA;AACrB,mBAAKV,aAAL;AACA,mBAAO,sBAAYQ,sBAAZ,EAAmC,MAAM,OAAKP,IAAL,CAAU,aAAV,EAAyB,OAAKC,IAA9B,EAAoCQ,KAApC,CAAzC,EAAP;AAFqB;AAGxB;;AAEKC,WAAN,GAAe;AAAA;;AAAA;AACX,mBAAKX,aAAL;AACA,mBAAO,sBAAYY,eAAZ,EAA4B,MAAM,OAAKX,IAAL,CAAU,MAAV,EAAkB,OAAKC,IAAvB,CAAlC,EAAP;AAFW;AAGd;AAnC6C;kBAA7BL,Q","file":"redisSet.js","sourcesContent":["/**\r\n * Created by Shlomi\r\n */\r\n\r\nimport RedisHelper from '../utils/redisHelper';\r\n\r\nimport RedisBaseKey from './redisBaseKey';\r\n\r\nexport default class RedisSet extends RedisBaseKey{\r\n\r\n    async add(data){\r\n        this._beforeAction();\r\n        return !!await this._raw('sadd', this._key, RedisHelper.encodeRedisData(data));\r\n    }\r\n\r\n    async remove(data){\r\n        this._beforeAction();\r\n        return !!await this._raw('srem', this._key, RedisHelper.encodeRedisData(data));\r\n    }\r\n\r\n    async exists(data){\r\n        this._beforeAction();\r\n        return !!await this._raw('sismember', this._key, RedisHelper.encodeRedisData(data));\r\n    }\r\n\r\n    async size(){\r\n        this._beforeAction();\r\n        return this._raw('scard', this._key);\r\n    }\r\n\r\n    async getAll(){\r\n        this._beforeAction();\r\n        return RedisHelper.decodeArrayOfRedisData(await this._raw('smembers', this._key));\r\n    }\r\n\r\n    async getRands(count = 1){\r\n        this._beforeAction();\r\n        return RedisHelper.decodeArrayOfRedisData(await this._raw('srandmember', this._key, count));\r\n    }\r\n\r\n    async popRand(){\r\n        this._beforeAction();\r\n        return RedisHelper.decodeRedisData(await this._raw('spop', this._key));\r\n    }\r\n}\r\n"]}