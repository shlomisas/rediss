{"version":3,"sources":["types/redisList.js"],"names":["RedisList","push","data","_raw","_key","encodeRedisData","unshift","pop","decodeRedisData","shift","getAt","index","getAll","start","length","decodeArrayOfRedisData"],"mappings":";;;;;;AAIA;;;;AAEA;;;;;;2cANA;;;;AAQe,MAAMA,SAAN,gCAAoC;AACzCC,QAAN,CAAWC,IAAX,EAAgB;AAAA;;AAAA;AACZ,mBAAO,CAAC,EAAE,MAAM,MAAKC,IAAL,CAAU,OAAV,EAAmB,MAAKC,IAAxB,EAA8B,sBAAYC,eAAZ,CAA4BH,IAA5B,CAA9B,CAAR,CAAR;AADY;AAEf;;AAEKI,WAAN,CAAcJ,IAAd,EAAmB;AAAA;;AAAA;AACf,mBAAO,CAAC,EAAE,MAAM,OAAKC,IAAL,CAAU,OAAV,EAAmB,OAAKC,IAAxB,EAA8B,sBAAYC,eAAZ,CAA4BH,IAA5B,CAA9B,CAAR,CAAR;AADe;AAElB;;AAEKK,OAAN,GAAW;AAAA;;AAAA;AACP,mBAAO,sBAAYC,eAAZ,EAA4B,MAAM,OAAKL,IAAL,CAAU,MAAV,EAAkB,OAAKC,IAAvB,CAAlC,EAAP;AADO;AAEV;;AAEKK,SAAN,GAAa;AAAA;;AAAA;AACT,mBAAO,sBAAYD,eAAZ,EAA4B,MAAM,OAAKL,IAAL,CAAU,MAAV,EAAkB,OAAKC,IAAvB,CAAlC,EAAP;AADS;AAEZ;;AAEKM,SAAN,CAAYC,KAAZ,EAAkB;AAAA;;AAAA;AACd,mBAAO,sBAAYH,eAAZ,EAA4B,MAAM,OAAKL,IAAL,CAAU,QAAV,EAAoB,OAAKC,IAAzB,EAA+BO,KAA/B,CAAlC,EAAP;AADc;AAEjB;;AAEKC,UAAN,CAAaC,QAAQ,CAArB,EAAwBC,SAAS,CAAC,CAAlC,EAAoC;AAAA;;AAAA;AAChC,mBAAO,sBAAYC,sBAAZ,EAAmC,MAAM,OAAKZ,IAAL,CAAU,QAAV,EAAoB,OAAKC,IAAzB,EAA+BS,KAA/B,EAAsCC,MAAtC,CAAzC,EAAP;AADgC;AAEnC;;AAEKA,UAAN,GAAc;AAAA;;AAAA;AACV,mBAAO,OAAKX,IAAL,CAAU,MAAV,EAAkB,OAAKC,IAAvB,CAAP;AADU;AAEb;AA3B8C;kBAA9BJ,S","file":"redisList.js","sourcesContent":["/**\r\n * Created by Shlomi\r\n */\r\n\r\nimport RedisHelper from '../utils/redisHelper';\r\n\r\nimport RedisBaseKey from './redisBaseKey';\r\n\r\nexport default class RedisList extends RedisBaseKey{\r\n    async push(data){\r\n        return !! await this._raw('rpush', this._key, RedisHelper.encodeRedisData(data));\r\n    }\r\n\r\n    async unshift(data){\r\n        return !! await this._raw('lpush', this._key, RedisHelper.encodeRedisData(data));\r\n    }\r\n\r\n    async pop(){\r\n        return RedisHelper.decodeRedisData(await this._raw('rpop', this._key));\r\n    }\r\n\r\n    async shift(){\r\n        return RedisHelper.decodeRedisData(await this._raw('lpop', this._key));\r\n    }\r\n\r\n    async getAt(index){\r\n        return RedisHelper.decodeRedisData(await this._raw('lindex', this._key, index));\r\n    }\r\n\r\n    async getAll(start = 0, length = -1){\r\n        return RedisHelper.decodeArrayOfRedisData(await this._raw('lrange', this._key, start, length));\r\n    }\r\n\r\n    async length(){\r\n        return this._raw('llen', this._key);\r\n    }\r\n}\r\n"]}