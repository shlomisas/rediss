{"version":3,"sources":["types/redisHash.js"],"names":["RedisHash","set","fieldName","data","_beforeAction","fields","args","fieldNames","Object","keys","tmpFieldName","push","_raw","_key","encodeRedisData","get","exists","remove","getAll"],"mappings":";;;;;;AAIA;;;;AAEA;;;;;;2cANA;;;;AAQe,MAAMA,SAAN,gCAAoC;AACzCC,OAAN,CAAUC,SAAV,EAAqBC,IAArB,EAA0B;AAAA;;AAAA;AACtB,kBAAKC,aAAL;;AAEA,gBAAG,OAAOF,SAAP,KAAqB,QAAxB,EAAiC;;AAE7B,oBAAIG,SAASH,SAAb;AACA,oBAAII,OAAO,EAAX;;AAEA,oBAAIC,aAAaC,OAAOC,IAAP,CAAYJ,MAAZ,CAAjB;;AAEA,qBAAI,IAAIK,YAAR,IAAwBH,UAAxB,EAAmC;AAC/BD,yBAAKK,IAAL,CAAUD,YAAV;AACAJ,yBAAKK,IAAL,CAAUN,OAAOK,YAAP,CAAV;AACH;;AAED,uBAAO,CAAC,MAAM,MAAKE,IAAL,CAAU,OAAV,EAAmB,MAAKC,IAAxB,EAA8B,GAAGP,IAAjC,CAAP,MAAmD,IAA1D;AAEH,aAdD,MAcK;AACD,uBAAO,CAAC,EAAC,MAAM,MAAKM,IAAL,CAAU,MAAV,EAAkB,MAAKC,IAAvB,EAA6BX,SAA7B,EAAwC,sBAAYY,eAAZ,CAA4BX,IAA5B,CAAxC,CAAP,CAAR;AACH;AAnBqB;AAoBzB;;AAEKY,OAAN,CAAUb,SAAV,EAAoB;AAAA;;AAAA;AAChB,mBAAKE,aAAL;AACA,mBAAO,OAAKQ,IAAL,CAAU,MAAV,EAAkB,OAAKC,IAAvB,EAA6BX,SAA7B,CAAP;AAFgB;AAGnB;;AAEKc,UAAN,CAAad,SAAb,EAAuB;AAAA;;AAAA;AACnB,mBAAKE,aAAL;AACA,mBAAO,CAAC,EAAC,MAAM,OAAKQ,IAAL,CAAU,SAAV,EAAqB,OAAKC,IAA1B,EAAgCX,SAAhC,CAAP,CAAR;AAFmB;AAGtB;;AAEKe,UAAN,CAAaf,SAAb,EAAuB;AAAA;;AAAA;AACnB,mBAAKE,aAAL;AACA,mBAAO,CAAC,EAAC,MAAM,OAAKQ,IAAL,CAAU,MAAV,EAAkB,OAAKC,IAAvB,EAA6BX,SAA7B,CAAP,CAAR;AAFmB;AAGtB;;AAEKgB,UAAN,GAAc;AAAA;;AAAA;AACV,mBAAKd,aAAL;AACA,mBAAO,OAAKQ,IAAL,CAAU,SAAV,EAAqB,OAAKC,IAA1B,CAAP;AAFU;AAGb;AAzC8C;kBAA9Bb,S","file":"redisHash.js","sourcesContent":["/**\r\n * Created by Shlomi\r\n */\r\n\r\nimport RedisHelper from '../utils/redisHelper';\r\n\r\nimport RedisBaseKey from './redisBaseKey';\r\n\r\nexport default class RedisHash extends RedisBaseKey{\r\n    async set(fieldName, data){\r\n        this._beforeAction();\r\n\r\n        if(typeof fieldName === 'object'){\r\n\r\n            let fields = fieldName;\r\n            let args = [];\r\n\r\n            let fieldNames = Object.keys(fields);\r\n\r\n            for(let tmpFieldName of fieldNames){\r\n                args.push(tmpFieldName);\r\n                args.push(fields[tmpFieldName]);\r\n            }\r\n\r\n            return (await this._raw('hmset', this._key, ...args)) === 'OK';\r\n\r\n        }else{\r\n            return !!await this._raw('hset', this._key, fieldName, RedisHelper.encodeRedisData(data));\r\n        }\r\n    }\r\n\r\n    async get(fieldName){\r\n        this._beforeAction();\r\n        return this._raw('hget', this._key, fieldName);\r\n    }\r\n\r\n    async exists(fieldName){\r\n        this._beforeAction();\r\n        return !!await this._raw('hexists', this._key, fieldName);\r\n    }\r\n\r\n    async remove(fieldName){\r\n        this._beforeAction();\r\n        return !!await this._raw('hdel', this._key, fieldName);\r\n    }\r\n\r\n    async getAll(){\r\n        this._beforeAction();\r\n        return this._raw('hgetall', this._key);\r\n    }\r\n}\r\n"]}